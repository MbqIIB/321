BROKER SCHEMA ru.croc.sbkz.mediation.billing.esql

PATH ru.croc.sbrf.bp.common.esql;

/**
 * Подготовка окончательного ответа для вызывающей системы
 **/
CREATE COMPUTE MODULE GetBillingResponseWAY_PrepareReply
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		 
		DECLARE outRef REFERENCE TO OutputRoot;
		CREATE LASTCHILD OF OutputRoot DOMAIN('XMLNSC') NAME 'XMLNSC';
		SET OutputRoot.XMLNSC			= InputRoot.ComIbmAggregateReplyBody.REQUEST.XMLNSC;
		
		IF NOT EXISTS(OutputRoot.MQMD[]) THEN 
			CREATE PREVIOUSSIBLING OF OutputRoot.XMLNSC DOMAIN('MQMD') NAME 'MQMD';
	 	END IF;			
		IF NOT EXISTS(OutputRoot.MQRFH2[]) THEN
			CREATE PREVIOUSSIBLING OF OutputRoot.XMLNSC DOMAIN('MQRFH2') NAME 'MQRFH2';
		END IF;
		
		-- Восстанавливаем идентификаторы ответного сообщения 
		SET OutputRoot.MQMD.CorrelId	= CAST(Environment.UserProperties.Source.MQMD.MsgId AS BLOB);
		SET OutputRoot.MQMD.MsgType		= MQMT_REPLY;
		
		CALL SetCommonMQReplyHeaders(OutputRoot);
			
		--Адресат ответного сообщения
		CALL SetMQReplyDestination(Environment.UserProperties.Source, OutputLocalEnvironment);
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;
END MODULE;


CREATE COMPUTE MODULE GetBillingResponseWAY_PrepareRrequestBilling
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
				
		
		RETURN TRUE;
	END;
END MODULE;
