BROKER SCHEMA ru.croc.sbkz.mediation.common.esql

PATH ru.croc.sbrf.bp.common.esql;

/**
 * Получение основных данных из ECHO-сообщения агрегации
 * и установка их в Environment переменную. Также, устанавливается
 * тело основного сообщения в ветке REQUEST в случае, если оно
 * единственное. Если же REQUEST сообщений несколько, то тело основного
 * сообщения отсутствует, а список сообщений из фолдеров REQUEST[] попадает
 * в Environment.Variables.RequestFolder.Request[]
 **/
CREATE COMPUTE MODULE ResponseSubflow_GetDataFromCorrelationMessage
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		-- Создаем новый MQMD заголовок для заполнения заново
		CREATE LASTCHILD OF OutputRoot DOMAIN('MQMD') NAME 'MQMD';
		
		DECLARE recAmount INTEGER CARDINALITY(InputRoot.ComIbmAggregateReplyBody.REQUEST[]);
		IF (recAmount = 1) THEN
			SET Environment.Variables.RequestCount = recAmount;
			CREATE LASTCHILD OF Environment.Variables.Source DOMAIN('XMLNSC') NAME 'XMLNSC';
			-- Восстанавливаем информацию из Echo-сообщения
			SET Environment.Variables.Source.XMLNSC = InputRoot.ComIbmAggregateReplyBody.ECHO.XMLNSC.OrigMess.Body;
			SET Environment.Variables.Source.MQRFH2 = InputRoot.ComIbmAggregateReplyBody.ECHO.XMLNSC.OrigMess.MQRFH2;
			-- В случае одного ответа копируем его тело (предполагается домен XMLNSC)
			CREATE LASTCHILD OF OutputRoot DOMAIN('XMLNSC') NAME 'XMLNSC';
	 		SET OutputRoot.XMLNSC	= InputRoot.ComIbmAggregateReplyBody.REQUEST.XMLNSC;
		ELSEIF (recAmount > 1) THEN
			SET Environment.Variables.RequestCount = recAmount;
			-- Восстанавливаем информацию из Echo-сообщения
			CREATE LASTCHILD OF Environment.Variables.Source DOMAIN('XMLNSC') NAME 'XMLNSC';
			SET Environment.Variables.Source.XMLNSC = InputRoot.ComIbmAggregateReplyBody.ECHO.XMLNSC.OrigMess.Body;
			SET Environment.Variables.Source.MQRFH2 = InputRoot.ComIbmAggregateReplyBody.ECHO.XMLNSC.OrigMess.MQRFH2;
			-- Сохраняем список ответов, само тело в OutputRoot не формируем
			SET Environment.Variables.Request[] = InputRoot.ComIbmAggregateReplyBody.REQUEST[];
			CREATE LASTCHILD OF OutputRoot DOMAIN('XMLNSC') NAME 'XMLNSC';
		END IF;
		-- Восстанавливаем MQMD из ответа полностью 
		SET OutputRoot.MQMD	= InputRoot.ComIbmAggregateReplyBody.REQUEST.MQMD;
		
		DECLARE inRequest REFERENCE TO InputRoot.ComIbmAggregateReplyBody.ECHO.XMLNSC.OrigMess;
		
		-- Проставим принудительно время жизни сообщения. 
		-- После копирования заголовков через аггрегацию оно слетает. 	
		SET OutputRoot.Properties.ExpirationTime = NULL;	
		SET OutputRoot.MQMD.Expiry = GetExpireTimeout();
		
		-- Копируем для восстановления идентификатора и места назначения ответа
		SET Environment.Variables.InputMQMD.MsgId 		= CAST(inRequest.MQMD.MsgId AS BLOB);
		SET Environment.Variables.InputMQMD.ReplyToQ 	= inRequest.MQMD.ReplyToQ;
		SET Environment.Variables.InputMQMD.ReplyToQMgr = inRequest.MQMD.ReplyToQMgr;

		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

END MODULE;
