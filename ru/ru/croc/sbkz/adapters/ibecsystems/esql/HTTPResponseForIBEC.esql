BROKER SCHEMA ru.croc.sbkz.adapters.ibecsystems.esql
PATH ru.croc.sbrf.bp.common.esql, ru.croc.sbkz.utils;

CREATE COMPUTE MODULE HTTPResponseForIBEC_AddOrigHeader
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL AddOrigHead(InputRoot, OutputRoot);
		 
		--DECLARE Operation  CHARACTER FIELDVALUE(InputRoot.ComIbmAggregateReplyBody.ECHO.XMLNSC.OrigMess.UserProperties.OperationName);
		
		SET OutputLocalEnvironment = InputLocalEnvironment;

		RETURN TRUE;
	END;
END MODULE;


CREATE COMPUTE MODULE HTTPResponseForIBEC_DetectOperation
	CREATE FUNCTION Main() RETURNS BOOLEAN 
	BEGIN
		DECLARE Operation CHARACTER FIELDNAME(InputRoot.XMLNSC.*:*[<]);
		DECLARE labelName CHARACTER;
		
		CASE Operation
		WHEN 'SRUpsert_Output' THEN
			SET labelName = 'SRUpsert_Output';
																
		ELSE
			-- Неизвестный тип сообщения
			THROW USER EXCEPTION VALUES ('Unknown format XML', Operation);
		END CASE;
		--SET OutputLocalEnvironment = InputLocalEnvironment;
		SET OutputLocalEnvironment.Destination.RouterList.DestinationData[1].labelName = labelName;

		RETURN TRUE;
	END;
END MODULE;




CREATE COMPUTE MODULE HTTPResponseForIBEC_PrepareResponse
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputRoot = InputRoot;

		SET OutputRoot.MQMD = NULL;
		SET OutputRoot.MQRFH2 = NULL;
		
		-- Проставляем HTTP-идентификатор ответа
		SET OutputLocalEnvironment.Destination.HTTP.RequestIdentifier = CAST(Environment.UserProperties.HTTPRequestIdentifier AS BLOB);

		RETURN TRUE;
	END;
END MODULE;
