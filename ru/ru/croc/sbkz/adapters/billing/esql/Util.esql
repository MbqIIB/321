BROKER SCHEMA ru.croc.sbkz.adapters.billing.esql

-- Константа для пространства имен, в котором объявлены методы веб-сервиса, которые предоставляет КСШ для СБОЛ
DECLARE sbol_ws_ns NAMESPACE 'http://sberbank.kz/processing';
-- Код общей (неспецифицированной) ошибки для HTTP-адаптера
DECLARE CommonSBOLErrorCode CONSTANT CHARACTER '-110';
-- Код общего описания для ошибки HTTP-адаптера
DECLARE CommonSBOLErrorDesc CONSTANT CHARACTER 'Error has been occured on ESB';


CREATE FUNCTION recodeYesNoForSBOL(IN param CHARACTER) RETURNS CHARACTER
BEGIN
	RETURN CASE param
		WHEN 'YES' THEN 'Y'
		WHEN 'NO' THEN 'N'
		ELSE param
	END;
END;

CREATE FUNCTION recodeTrueFalseForSBOL(IN param CHARACTER) RETURNS CHARACTER
BEGIN
	RETURN CASE param
		WHEN 'YES' THEN 'true'
		WHEN 'NO' THEN 'false'
		ELSE param
	END;
END;

CREATE FUNCTION GetTrueFalse(IN param CHARACTER) RETURNS CHARACTER
BEGIN
	RETURN CASE param
		WHEN 'OPEN' THEN 'true'
		WHEN 'CLOSE' THEN 'false'
		ELSE param
	END;
END;

CREATE FUNCTION GetTypeStatusPerson(IN param CHARACTER) RETURNS CHARACTER
BEGIN
	RETURN CASE param
	WHEN '1' THEN 'Паспорт Гражданина СССР'
	WHEN '2' THEN 'Загранпаспорт гражданина СССР'
	WHEN '3' THEN 'Свидетельство о рождении'
	WHEN '4' THEN 'Удостоверение личности офицера'
	WHEN '5' THEN 'Справка об освобождении из места лишения свободы'
	WHEN '6' THEN 'Паспорт Минморфлота'
	WHEN '7' THEN 'Военный билет солдата (матроса, сержанта, старшины)'
	WHEN '9' THEN 'Дипломатический паспорт гражданина РФ'					
	WHEN '10' THEN 'Иностранный паспорт'	
	WHEN '11' THEN 'Свидетельство о регистрации ходатайства о признании иммигранта беженцем'	
	WHEN '12' THEN 'Вид на жительство'
	WHEN '13' THEN 'Удостоверение беженца в РФ'
	WHEN '14' THEN 'Временное удостоверение личности гражданина РФ'	
	WHEN '21' THEN 'Паспорт гражданина РФ'	
	WHEN '22' THEN 'Загранпаспорт гражданина РФ'
	WHEN '26' THEN 'Паспорт моряка'
	WHEN '27' THEN 'Военный билет офицера запаса'
	WHEN '91' THEN 'Иные документы, выдаваемые органами МВД'
	WHEN '39' THEN 'Миграционная карта'
	WHEN '300' THEN 'Паспорт way(Реквизиты документа, удостоверяющего личность, представляют собой строку, в которой указаны последовательно серия и номер документа. Не допускается использование пробелов в поле данного типа)'													
	WHEN '400' THEN 'Индивидуальный Идентификационный Номер (ИИН), цифровой код, присваивающийся физическому лицу один раз и пожизненно'
		ELSE param
	END;
END;

CREATE FUNCTION ChangeStatus(IN param CHARACTER) RETURNS CHARACTER
BEGIN 
	RETURN CASE param
		WHEN 'OPEN' THEN 'Opened'
		WHEN 'CLOSE' THEN 'Closed'
		ELSE param
	END;
END;

CREATE FUNCTION ChangeStatusRS(IN param CHARACTER) RETURNS CHARACTER
BEGIN 
	RETURN CASE param
		WHEN 'OPEN' THEN 'Opened'
		WHEN 'CLOSE' THEN 'Closed'
		WHEN 'ARREST' THEN 'Arested'			
		ELSE param
	END;
END;

CREATE FUNCTION GetBalType(IN param CHARACTER) RETURNS CHARACTER
BEGIN
	RETURN CASE param
		WHEN 'AVAILABLE' THEN 'Avail'
		WHEN 'CR_LIMIT' THEN 'CR_LIMIT'
		WHEN 'PAYMENT' THEN	'AvailPmt'			 
		ELSE param
	END;
END;

CREATE FUNCTION convertNameBs(IN param CHARACTER) RETURNS CHARACTER
BEGIN
	RETURN CASE param
		WHEN 'NameService' THEN 'groupName'
		WHEN 'ServiceID' THEN 'Id'
		WHEN 'minTariff' THEN 'MinTariffValue'
		WHEN 'midTariff' THEN 'MidTariffValue'
		WHEN 'maxTariff' THEN 'MaxTariffValue'
		WHEN 'minTariffThresh' THEN 'MinTariffThreshold'
		WHEN 'midTariffThresh'	THEN 'MidTariffThreshold'
		WHEN 'prevCount' THEN 'PrevCount'
		WHEN 'lastCount' THEN 'LastCount'
		WHEN 'prevDate' THEN 'PrevCountDate'
		WHEN 'lastDate' THEN 'LastCountDate'
		WHEN 'payCount' THEN 'PayCounts'
		WHEN 'countSum'	THEN 'FixSum'
		WHEN 'delta' THEN 'DebtValue'
		WHEN 'paySum' THEN 'PaySum'							 
		ELSE param
	END;
END;

CREATE FUNCTION CompareDebit(IN param CHARACTER) RETURNS CHARACTER
BEGIN
	IF param < '0' THEN
		RETURN 'False';
	ELSEIF param > '0' THEN
		RETURN 'True';
	END IF;
				 
END;


CREATE FUNCTION changeValue(IN param CHARACTER) RETURNS CHARACTER
BEGIN
	RETURN CASE param
		WHEN 'YES' THEN 'true'
		WHEN 'NO' THEN 'false'
		ELSE param
	END;
END;

CREATE FUNCTION GetStmtType(IN param CHARACTER) RETURNS CHARACTER
BEGIN
	RETURN CASE param
		WHEN 'N' THEN 'Authorization'
		WHEN 'Y' THEN 'Financial'
		ELSE param
	END;
END;

/*CREATE FUNCTION GetId(OUT id INTEGER) RETURNS INTEGER
LANGUAGE JAVA 
EXTERNAL NAME "ru.croc.sbkz.adapters.sbolrs.getInt";*/

/**
 * Процедура сохранения параметров сообщения в БД, а
 * также генерации идентификатора в соответствие с
 * определенным алгоритмом.
 * Реализована как внешняя процедура PL/SQL.
 */
CREATE PROCEDURE generateId(OUT file_id CHARACTER)
LANGUAGE DATABASE
EXTERNAL NAME "sbkz.gcvp_adapter_kz.generate_file_id";
/**
 *  Определение функции java хэшированяи строки
 */
CREATE PROCEDURE hash(IN days CHARACTER, IN serivce CHARACTER,OUT output CHARACTER)
LANGUAGE JAVA
EXTERNAL NAME "ru.croc.sbrf.common.flow.HashGenerator.generateId";

CREATE PROCEDURE removeDigits(IN name CHARACTER, OUT output CHARACTER)
LANGUAGE JAVA
EXTERNAL NAME "ru.croc.sbrf.common.flow.HashGenerator.removeDigits";

CREATE PROCEDURE removeChar(IN name CHARACTER, OUT output CHARACTER)
LANGUAGE JAVA
EXTERNAL NAME "ru.croc.sbrf.common.flow.HashGenerator.removeString";

CREATE PROCEDURE parseNameBS(IN name CHARACTER, OUT output CHARACTER)
LANGUAGE JAVA
EXTERNAL NAME "ru.croc.sbrf.common.flow.HashGenerator.parseNameBs";

CREATE PROCEDURE getNameBS(IN name CHARACTER, OUT output CHARACTER)
LANGUAGE JAVA
EXTERNAL NAME "ru.croc.sbrf.common.flow.HashGenerator.getNameBs";

CREATE PROCEDURE hash_one(IN enddate CHARACTER,IN startdate CHARACTER,OUT output CHARACTER)
LANGUAGE JAVA
EXTERNAL NAME "ru.croc.sbrf.common.flow.HashGenerator.getdate"; 

CREATE FUNCTION changeType(IN param CHARACTER) RETURNS CHARACTER
BEGIN
	RETURN CASE param
		WHEN 'DB' THEN 'DC'
		WHEN 'CR' THEN 'CC'
		ELSE param
	END;
END;

CREATE FUNCTION StatusGet(IN param CHARACTER) RETURNS CHARACTER
BEGIN
	RETURN CASE param
		WHEN 'Valid' THEN 'Active'
		WHEN 'Do not Honor' THEN 'Blocked'
		WHEN 'Invalid' THEN 'Stoped'
		WHEN 'Decline' THEN 'Blocked'	
		ELSE param
	END;
END;

CREATE FUNCTION GetDate(IN param CHARACTER) RETURNS CHARACTER
BEGIN
	DECLARE vAT01 CHARACTER;
	DECLARE vAT02 CHARACTER;
	
	DECLARE day_format CHARACTER;
	DECLARE date_format CHARACTER;
	
	SET vAT01 = SUBSTRING(param FROM 0 FOR 3);
	SET vAT02 = SUBSTRING(param FROM 3 FOR 2);
	
	CASE vAT02 
	WHEN  '01' THEN
		SET day_format = '31'; 
	WHEN '02' THEN
		SET day_format = '28';
	WHEN '03' THEN
		SET day_format = '31';
	WHEN '04' THEN
		SET day_format = '30';
	WHEN '05' THEN
		SET day_format = '31';
	WHEN '06' THEN
		SET day_format = '30';
	WHEN '07' THEN
		SET day_format = '31';
	WHEN '08' THEN
		SET day_format = '31';
	WHEN '09' THEN
		SET day_format = '30';
	WHEN '10' THEN
		SET day_format = '31';
	WHEN '11' THEN
		SET day_format = '30';
	WHEN '12' THEN
		SET day_format = '31';
	END CASE;
								 				
	SET date_format = '20' || vAT01 || '-' || vAT02 || '-' || day_format;

	RETURN date_format;
END;

CREATE FUNCTION DefineStatus(In status_code CHARACTER) RETURNS CHARACTER
BEGIN
	
	RETURN CASE status_code
		WHEN '0' THEN 'Успешно'
		WHEN '-105' THEN 'Произошел TIMEOUT от QPragma'
		WHEN '-100' THEN 'КСШ не доступно'	
		WHEN '-400' THEN 'Одна из систем не вернула ответ'
		WHEN '-2' THEN 'Одна из систем не вернула ответ'
		WHEN '2200' THEN 'Одна из систем не вернула ответ'
		WHEN '-500' THEN 'Одна из систем не вернула ответ'		
	ELSE 'Одна из систем не вернула ответ'
	END;		
END;

CREATE FUNCTION DefineStatusCode(In status_code CHARACTER) RETURNS CHARACTER
BEGIN
	
	RETURN CASE status_code
		WHEN '0' THEN '0'
		WHEN '-105' THEN '-105'
		WHEN '-100' THEN '-100'	
		WHEN '-400' THEN '-400'
		WHEN '-2' THEN '-400'
		WHEN '2200' THEN '-400'
		WHEN '-500' THEN '-400'			
		ELSE '-400'
	END;		
END;

-- Возвращает тип валюты
CREATE FUNCTION GetTypeOfCurrency(IN currency CHARACTER) RETURNS CHARACTER
BEGIN
	RETURN CASE currency
		WHEN '964' THEN 'PAD'
		WHEN '962' THEN 'PAT'
		WHEN '959' THEN 'AUR'
		WHEN '961' THEN 'ARG'
		ELSE ''			
	END;
END;

-- Возвращает вид элемента
CREATE FUNCTION GetNameOfCurrency(IN currency CHARACTER) RETURNS CHARACTER
BEGIN
	RETURN CASE currency
		WHEN 'PAD' THEN 'Палладий'
		WHEN 'PAT' THEN 'Платина'
		WHEN 'AUR' THEN 'Золота'
		WHEN 'ARG' THEN 'Серебро'
		ELSE ''			
	END;
END;

-- Возвращает вид элемента
CREATE FUNCTION GetStatusOfCurrency(IN status CHARACTER, IN blocked CHARACTER) RETURNS CHARACTER
BEGIN
	IF status = 'OPEN' AND blocked = 'Y' THEN
		RETURN 'Arrested';
	ELSEIF status ='CLOSE' AND blocked = 'Y' THEN
		RETURN 'Closed';
	ELSEIF status = 'OPEN' AND blocked = 'N' THEN
		RETURN 'Opened';
	ELSEIF status = 'CLOSE' AND blocked = 'N' THEN
		RETURN 'Closed';			
	END IF;	
END;

CREATE FUNCTION ConvertToBilling(IN uid CHARACTER) RETURNS CHARACTER
BEGIN
	
	DECLARE first CHARACTER;
	DECLARE second1 CHARACTER;
	DECLARE third CHARACTER;
	DECLARE fourth CHARACTER;
	DECLARE fifth CHARACTER;
	
	SET first = SUBSTRING(uid FROM 1 FOR 8);
	SET second1 = SUBSTRING(uid FROM 9 FOR 4);
	SET third = SUBSTRING(uid FROM 13 FOR 4);
	SET fourth = SUBSTRING(uid FROM 17 FOR 4);
	SET fifth = SUBSTRING(uid FROM 21 FOR 12);
	
	DECLARE general CHARACTER;
	
	SET general = first || '-' || second1 || '-' || third || '-' || fourth || '-' || fifth;
	
	RETURN general;
	
END;