BROKER SCHEMA ru.croc.sbkz.adapters.rsrouter.esql

/**
 * Копирование заголовков из InputRoot в OutputRoot.
 * Осуществляется путем воссоздания всех доменов из InputRoot
 * в OutputRoot. Функцию можно применять только на "чистый" OutputRoot,
 * т.е. на тот, в котором еще не было никаких присвоений и не содержит никаких
 * дочерних узлов.
 **/
CREATE PROCEDURE CopyMessageHeaders(IN inputRoot REFERENCE, IN outputRoot REFERENCE) BEGIN
	DECLARE I INTEGER 1;
	DECLARE J INTEGER;
	DECLARE domainName CHARACTER;
	
	SET J = CARDINALITY(inputRoot.*[]);
	WHILE I < J DO
		SET domainName = FIELDNAME(inputRoot.*[I]);
		IF domainName = 'Properties' THEN
			SET outputRoot.*[I] = inputRoot.*[I]; 
		ELSE
			CREATE LASTCHILD OF outputRoot DOMAIN(domainName) NAME domainName;
			SET outputRoot.*[<] = inputRoot.*[I];
		END IF;
		SET I = I + 1;
	END WHILE;
END;

/**
 * Копирование всего сообщения из InputRoot в OutputRoot.
 * Осуществляется путем воссоздания всех доменов из InputRoot
 * в OutputRoot. Функцию можно применять только на "чистый" OutputRoot,
 * т.е. на тот, в котором еще не было никаких присвоений и не содержит никаких
 * дочерних узлов.
 **/
CREATE PROCEDURE CopyWholeMessage(IN inputRoot REFERENCE, IN outputRoot REFERENCE) BEGIN
	DECLARE I INTEGER 1;
	DECLARE J INTEGER;
	DECLARE domainName CHARACTER;
	SET J = CARDINALITY(inputRoot.*[]);
	WHILE I <= J DO
		SET domainName = FIELDNAME(inputRoot.*[I]);
		IF domainName = 'Properties' THEN
			SET outputRoot.*[I] = inputRoot.*[I]; 
		ELSE
			CREATE LASTCHILD OF outputRoot DOMAIN(domainName) NAME domainName;
			SET outputRoot.*[<] = inputRoot.*[I];
		END IF;
		SET I = I + 1;
	END WHILE;
END;

CREATE FUNCTION ConvertToBilling(IN uid CHARACTER) RETURNS CHARACTER
BEGIN
	
	DECLARE first CHARACTER;
	DECLARE second1 CHARACTER;
	DECLARE third CHARACTER;
	DECLARE fourth CHARACTER;
	DECLARE fifth CHARACTER;
	
	SET first = SUBSTRING(uid FROM 1 FOR 8);
	SET second1 = SUBSTRING(uid FROM 9 FOR 4);
	SET third = SUBSTRING(uid FROM 13 FOR 4);
	SET fourth = SUBSTRING(uid FROM 17 FOR 4);
	SET fifth = SUBSTRING(uid FROM 21 FOR 12);
	
	DECLARE general CHARACTER;
	
	SET general = first || '-' || second1 || '-' || third || '-' || fourth || '-' || fifth;
	
	RETURN general;
	
END;

